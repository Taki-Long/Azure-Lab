# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main
  - dev/*

pool:
  vmImage: ubuntu-latest

stages:
  - stage: CreateStaticWebApp
    jobs:
      - job: CreateStaticWebApp
        steps:
          - task: TerraformInstaller@1
            displayName: install terraform
            inputs:
              terraformVersion: '1.5.6'
          - task: TerraformTaskV4@4
            displayName: terraform init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'arm-subscription'
              backendAzureRmResourceGroupName: 'Azure-Lab'
              backendAzureRmStorageAccountName: 'takiazurelab'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'static-web-app'
          - task: TerraformTaskV4@4
            displayName: terraform plan
            inputs:
              command: 'plan'
              commandOptions: '-out main.tfplan'
              environmentServiceNameAzureRM: 'arm-subscription'
          - task: TerraformTaskV4@4
            displayName: terraform apply
            inputs:
              command: 'apply'
              commandOptions: '-auto-approve main.tfplan'
              environmentServiceNameAzureRM: 'arm-subscription'

  - stage: DeployStaticWebApp
    jobs:
      - job: DeployStaticWebApp
        steps:
          - task: AzureCLI@2
            displayName: get deployment token
            inputs:
              azureSubscription: arm-subscription
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                APIKEY=$(az staticwebapp secrets list --name azure-lab --output json | jq -r '.properties.apiKey')
                echo '##vso[task.setvariable variable=apiKey;issecret=true]$APIKEY'
          - task: AzureStaticWebApp@0
            displayName: deploy code
            inputs:
              app_location: 'web'
              skip_app_build: true
              skip_api_build: true
              verbose: true
              deployment_environment: 'dev'
              production_branch: 'main'
              azure_static_web_apps_api_token: $(apiKey)
