# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main
  - dev/*

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs:
      - job: Build
        steps:
          - task: Npm@1
            displayName: Npm install
            inputs:
              command: install
              workingDir: web
          - task: Npm@1
            displayName: nextjs export
            inputs:
              command: custom
              customCommand: run build
              workingDir: web
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: web/out
              artifactName: next_export

  - stage: CreateStaticWebApp
    jobs:
      - job: CreateStaticWebApp
        steps:
          - task: TerraformInstaller@1
            displayName: Install terraform
            inputs:
              terraformVersion: "1.5.6"
          - task: TerraformTaskV4@4
            displayName: Terraform init
            inputs:
              provider: "azurerm"
              command: "init"
              backendServiceArm: "arm-subscription"
              backendAzureRmResourceGroupName: "Azure-Lab"
              backendAzureRmStorageAccountName: "takiazurelab"
              backendAzureRmContainerName: "tfstate"
              backendAzureRmKey: "static-web-app"
          - task: TerraformTaskV4@4
            displayName: Terraform plan
            inputs:
              command: "plan"
              commandOptions: "-out main.tfplan"
              environmentServiceNameAzureRM: "arm-subscription"
          - task: TerraformTaskV4@4
            displayName: Terraform apply
            inputs:
              command: "apply"
              commandOptions: "-auto-approve main.tfplan"
              environmentServiceNameAzureRM: "arm-subscription"

  - stage: DeployStaticWebApp
    jobs:
      - job: DeployStaticWebApp
        steps:
          - task: AzureCLI@2
            displayName: Get deployment token
            inputs:
              azureSubscription: arm-subscription
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                APIKEY=$(az staticwebapp secrets list --name azure-lab --output json | jq -r '.properties.apiKey')
                echo "##vso[task.setvariable variable=apiKey;issecret=true]${APIKEY}"
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: next_export
              path: next_export
          - task: AzureStaticWebApp@0
            displayName: Deploy code
            inputs:
              app_location: "next_export"
              skip_app_build: true
              skip_api_build: true
              verbose: true
              deployment_environment: "dev"
              production_branch: "main"
              azure_static_web_apps_api_token: $(apiKey)
